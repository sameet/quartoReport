---
title: "RNA-Seq Report"
author: "Sameet Mehta"
email: "sameet.mehta@yale.edu"
date: "`r Sys.Date()`"
format:
  typst:
    toc: true
    keep-typ: true
  pdf:
    coloredlinks: true
  html:
    code-fold: true
    code-summary: "Show Code"
  ipynb:
    markdown-headings: atx
    prefer-html: true
execute:
  warning: false
  message: false
  echo: true
params:
  counts: "~/data/reporter_testing/deseq2_2_samples/gene_count_matrix_fixed.csv"
  meta_fn: "~/data/reporter_testing/deseq2_2_samples/sample-sheet.txt"
  contrasts_fn: "~/data/reporter_testing/deseq2_2_samples/contrasts.txt"
  metrics: null
  outputs: "~/data/reporter_testing/report_output_dir"
  use_threshold: 0.05
---

## Introduction

This is analysis report for differential gene expression analysis.
The data is described in the later sections.
In this section we are setting up the requirements for the analysis to happen correcty.
We will import packages and functions.

```{r}
#| label: "setup"

# library(remotes)
# remotes::install_github("sameet/quartoReport")

library(quartoReport)
# use_thresh <- 0.05 # global threshold to use as alpha in the analysis
```

Please note that this package is currently under active development.
This status may change in the future.
Currently this package is **not** ready for production use.
USE AT YOUR OWN RISK.

## QC Report
We do not have a metrics file available so we will do not have a QC section.

## Analysis

The following sections detail how we ingest the data, prepare the data and process the data for analysis.

### Read in meta-data
Meta-data in this context the the description of the files.
A method to inform which samples bear which labels.
Essentially it is a dicionary that has a one -> many relation ship between conditions and samples.
But, it has one -> one relationshp between sample and condition.

This step expects a tab-separated values file with 2 columns.
We may extend this to more conditions per sample in the future, but currently we expect only 2 columns in this file.
In the code we will rename these columns to `sample`, and `condition`.

```{r}
#| label: tbl-read_meta_data
#| tbl-cap: The sample-sheet provided and being used in this analysis.

meta_df <- read_meta_data(params$meta_fn)

meta_df |>
  kableExtra::kbl(booktabs = TRUE) |>
  kableExtra::kable_styling(bootstrap_options = c("condensed", "striped"),
                latex_options = c("striped"))
```

### Read in Contrasts

We will read in the contrasts here.
These are the combinations that we are going to use.
If a `contrasts.txt` file is provided, we will do calculations for only those comparisons.
Otherwise, we will do all pair-wise comparisons from the `condition` column in the meta-data.

It is usually best practice to think through the analysis.
It is possible for a given analysis all conditions need to be compared against each other.
However, typically only a small sub-set of the comparisons will be relevant.
E.g. in a time series kind of experimental design the goal is to study differences between two consecutive time points serially.
If there are many time points number of comparisons increase exponentially.

Most experimental designs **do not have** hundreds of comparisons.

```{r}
#| label: tbl-contrasts
#| tbl-cap: The contrasts being used in this analysis.

contrasts_df <- get_contrasts(fn = params$contrasts, meta_df = meta_df)

contrasts_df |>
  kableExtra::kbl(booktabs = TRUE) |>
  kableExtra::kable_styling(bootstrap_options = c("condensed", "striped"),
                latex_options = c("striped"))
```

### Read in the count data

The RNA-Seq pipeline generates two count matrices, the transcript-level count matrix, and gene-level count matrix.
In this analysis we are going to use the gene-level count matrix *only*.
Consequently, for the smRNA-Seq analysis this will be either the "mature" smRNA counts, or the "hairpin" smRNA counts.

By design the genes are listed according to their Ensembl gene IDs, or other IDs.
For most model organisms most of the genes have a real human readable name, but for many non-standard model organisms not all genes have a human readable name.
We will be initially doing all the analysis using Ensembl gene IDs, and then annotate only the significantly changed genes for most common model organisms e.g. human, mouse, rat, drosophila etc.

```{r}
#| label: read_counts

count_mat <- read_count_mat(fn = params$counts, meta_df)
```

## Gene Expression Analysis

With the `DESeq2` method it is easier to generate the analysis for all possible combinations as defined by the `condition` column of the `meta_df`.
We can then extract the results for the comparions of interest rather easily.

```{r}
#| label: DEGA

dds <- make_deseq_object(count_mat = count_mat, meta_df = meta_df)
vs_data <- stabilize_count_data(dds)
```

It is advised that you save the `dds` object and the `vs_data` object.
There are relatively expensive objects and require sizable computation to generate.
We want to preserve them in case of further downstream analysis.

```{r}
#| label: saveObjects

save_objects(dds, op_dir = params$outputs)
save_objects(vs_data, op_dir = params$outputs)
```

The DESeqDataSet-... file represents the DESeq data-set that will be used in this analysis.
The DESEqTransform-... file represents a `vst`-transformed count data file.
The files will be saved in output directory defined in the `params` section of the `YAML`.


## Results for comparison WT_FOREBRAIN--GSRW_FOREBRAIN

This comparison has a total of 398 s[1] "qmd/sample_report_trial.qmd"
 report we will show informatin about top 30 genes.

### Changed genes for WT_FOREBRAIN--GSRW_FOREBRAIN

In @tbl-comparison_1 we see top genes changed between WT_FOREBRAIN--GSRW_FOREBRAIN.

```{r}
#| label: tbl-comparison_1
#| tbl-cap: Top changed differentially expressed genes in WT_FOREBRAIN--GSRW_FOREBRAIN.

res_df_1 <- get_single_result(dds, comp_df = contrasts_df[1, ])
res_df_1 |>
  dplyr::filter(padj <= 0.05) |>
  dplyr::arrange(desc(abs(log2FoldChange))) |>
  dplyr::slice_max(order_by = abs(log2FoldChange), n = 30) |>
  dplyr::arrange(desc(log2FoldChange)) |>
  dplyr::select(gene_id, log2FoldChange, padj) -> use_sig_df_1

upreg_rows <- which(use_sig_df_1$log2FoldChange > 0)
downreg_rows <- which(use_sig_df_1$log2FoldChange < 0)

use_sig_df_1 |>
  kableExtra::kbl(booktabs = TRUE) |>
  kableExtra::kable_styling(bootstrap_options = c("condensed"),
                           latex_options = c("striped"),
                           font_size = 8
                           ) |>
  kableExtra::row_spec(upreg_rows, color = "red") |>
  kableExtra::row_spec(downreg_rows, color = "blue")
```

### Data Visualization for WT_FOREBRAIN--GSRW_FOREBRAIN

```{r}
#| label: make-plots_1
#| echo: false

all_plot_1 <- make_all_plots(res_df = res_df_1,
                                    vs_data = vs_data,
                                    thresh = params$use_threshold,
                                    op_dir = params$outputs)

```

```{r}
#| label: fig-volcano_1
#| fig-cap: Volcano Plot for WT_FOREBRAIN--GSRW_FOREBRAIN.  Genes in blue are down-regulated, and genes in red are up-regulated.

all_plot_1$volcano
```

```{r}
#| label: fig-boxplot_single_1
#| fig-cap: Boxplot for WT_FOREBRAIN--GSRW_FOREBRAIN.

all_plot_1$bp_s
```
```{r}
#| label: fig-hm_1
#| fig-cap: Heatmp for all significant genes for WT_FOREBRAIN--GSRW_FOREBRAIN.  There are total `r nrow(sig_df)` significant genes.

ggplotify::as.ggplot(all_plot_1$hm)
```



## Results for comparison WT_sub.pallum--GSRW_sub.pallum

This comparison has a total of 51 significant genes.
Of those in this report we will show informatin about top 30 genes.

### Changed genes for WT_sub.pallum--GSRW_sub.pallum

In @tbl-comparison_2 we see top genes changed between WT_sub.pallum--GSRW_sub.pallum.

```{r}
#| label: tbl-comparison_2
#| tbl-cap: Top changed differentially expressed genes in WT_sub.pallum--GSRW_sub.pallum.

res_df_2 <- get_single_result(dds, comp_df = contrasts_df[2, ])
res_df_2 |>
  dplyr::filter(padj <= 0.05) |>
  dplyr::arrange(desc(abs(log2FoldChange))) |>
  dplyr::slice_max(order_by = abs(log2FoldChange), n = 30) |>
  dplyr::arrange(desc(log2FoldChange)) |>
  dplyr::select(gene_id, log2FoldChange, padj) -> use_sig_df_2

upreg_rows <- which(use_sig_df_2$log2FoldChange > 0)
downreg_rows <- which(use_sig_df_2$log2FoldChange < 0)

use_sig_df_2 |>
  kableExtra::kbl(booktabs = TRUE) |>
  kableExtra::kable_styling(bootstrap_options = c("condensed"),
                           latex_options = c("striped"),
                           font_size = 8
                           ) |>
  kableExtra::row_spec(upreg_rows, color = "red") |>
  kableExtra::row_spec(downreg_rows, color = "blue")
```

### Data Visualization for WT_sub.pallum--GSRW_sub.pallum

```{r}
#| label: make-plots_2
#| echo: false

all_plot_2 <- make_all_plots(res_df = res_df_2,
                                    vs_data = vs_data,
                                    thresh = params$use_threshold,
                                    op_dir = params$outputs)

```

```{r}
#| label: fig-volcano_2
#| fig-cap: Volcano Plot for WT_sub.pallum--GSRW_sub.pallum.  Genes in blue are down-regulated, and genes in red are up-regulated.

all_plot_2$volcano
```

```{r}
#| label: fig-boxplot_single_2
#| fig-cap: Boxplot for WT_sub.pallum--GSRW_sub.pallum.

all_plot_2$bp_s
```
```{r}
#| label: fig-hm_2
#| fig-cap: Heatmp for all significant genes for WT_sub.pallum--GSRW_sub.pallum.  There are total `r nrow(sig_df)` significant genes.

ggplotify::as.ggplot(all_plot_2$hm)
```


